% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FILTERING-get_queryId_results.R
\name{get_queryId_results}
\alias{get_queryId_results}
\title{Get results of a ChemSpider query}
\usage{
get_queryId_results(queryId, status, start = NULL, count = NULL,
  apikey)
}
\arguments{
\item{queryId}{A valid 36-character ChemSpider query ID string; see Details.}

\item{status}{A character string indicating the query status as returned by \code{chemspiderapi::get_queryId_status()}}

\item{start}{Optional: An integer value giving the position from which to start the retrieval of query results. See Details.}

\item{count}{Optional: An integer value giving the the number of query results to retrieve. See Details.}

\item{apikey}{A 32-character string with a valid key for ChemSpider's API services.}
}
\value{
A character vector indicating the status of the query; see Details.
}
\description{
This function is used to retrieve the results of a ChemSpider query after \code{chemspiderapi::get_queryId_status()} returns \code{"Complete"}.
}
\details{
Before running \code{chemspiderapi::get_queryId_results()}, make sure \code{chemspiderapi::get_queryId_status()} returns \code{"Complete"}. In fact, this function will return \code{"NA"} if the status is not \code{"Complete"}.\cr
\cr
If the results have been truncated because there were more results than the maximum number of results permitted (by default, 10,000), a warning is issued. If this happens, you can split your requests into smaller batches.\cr
\cr
To batch your requests, call this function with two optional parameters, \code{start} and \code{count}. Both take integer values. \code{start} is the number of the record to start with (zero-based), and \code{count} is the number of records to return. For example, to request results 200-300, use \code{start = 200L} and \code{count = 100L}.
}
\examples{
\dontrun{
## Get results of a query from ChemSpider
queryId <- "A valid 36-character Chemspider query ID"
apikey <- "A valid 32-character Chemspider API key"
status <- get_queryId_status(queryId = queryId, apikey = apikey)
get_queryId_results(queryId = queryId, status = status, apikey = apikey)
}
}
\seealso{
\url{https://developer.rsc.org/compounds-v1/apis/get/filter/{queryId}/results}
}
\author{
Raoul Wolf (\url{https://github.com/RaoulWolf/})
}
